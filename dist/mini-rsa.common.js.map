{"version":3,"file":"mini-rsa.common.js","sources":["../node_modules/core-js/library/modules/_core.js","../node_modules/core-js/library/fn/json/stringify.js","../node_modules/rollup-plugin-node-globals/src/global.js","../node_modules/buffer-es6/base64.js","../node_modules/buffer-es6/ieee754.js","../node_modules/buffer-es6/isArray.js","../node_modules/buffer-es6/index.js","../src/lib/MiniRSA.js"],"sourcesContent":["var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","export default (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n","\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\nexport function toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nexport function fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","\nexport function read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexport function write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nexport default Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\nimport * as base64 from './base64'\nimport * as ieee754 from './ieee754'\nimport isArray from './isArray'\n\nexport var INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength()\nexport {_kMaxLength as kMaxLength};\nfunction typedArraySupport () {\n  return true;\n  // rollup issues\n  // try {\n  //   var arr = new Uint8Array(1)\n  //   arr.__proto__ = {\n  //     __proto__: Uint8Array.prototype,\n  //     foo: function () { return 42 }\n  //   }\n  //   return arr.foo() === 42 && // typed array instances can be augmented\n  //       typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n  //       arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  // } catch (e) {\n  //   return false\n  // }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nexport function Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    // Object.defineProperty(Buffer, Symbol.species, {\n    //   value: null,\n    //   configurable: true\n    // })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nexport function SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nexport function isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n","/*!\r\n * RSA library for Node.js\r\n *\r\n * Author: rzcoder\r\n * License MIT\r\n */\r\n\r\nvar constants = require('constants');\r\nvar rsa = require('./libs/rsa.js');\r\nvar crypt = require('crypto');\r\nvar ber = require('asn1').Ber;\r\nvar _ = require('./utils')._;\r\nvar utils = require('./utils');\r\nvar schemes = require('./schemes/schemes.js');\r\nvar formats = require('./formats/formats.js');\r\n\r\nif (typeof constants.RSA_NO_PADDING === \"undefined\") {\r\n    //patch for node v0.10.x, constants do not defined\r\n    constants.RSA_NO_PADDING = 3;\r\n}\r\n\r\nexport default (function () {\r\n    var SUPPORTED_HASH_ALGORITHMS = {\r\n        node10: ['md4', 'md5', 'ripemd160', 'sha1', 'sha224', 'sha256', 'sha384', 'sha512'],\r\n        node: ['md4', 'md5', 'ripemd160', 'sha1', 'sha224', 'sha256', 'sha384', 'sha512'],\r\n        iojs: ['md4', 'md5', 'ripemd160', 'sha1', 'sha224', 'sha256', 'sha384', 'sha512'],\r\n        browser: ['md5', 'ripemd160', 'sha1', 'sha256', 'sha512']\r\n    };\r\n\r\n    var DEFAULT_ENCRYPTION_SCHEME = 'pkcs1_oaep';\r\n    var DEFAULT_SIGNING_SCHEME = 'pkcs1';\r\n\r\n    var DEFAULT_EXPORT_FORMAT = 'private';\r\n    var EXPORT_FORMAT_ALIASES = {\r\n        'private': 'pkcs1-private-pem',\r\n        'private-der': 'pkcs1-private-der',\r\n        'public': 'pkcs8-public-pem',\r\n        'public-der': 'pkcs8-public-der',\r\n    };\r\n\r\n    /**\r\n     * @param key {string|buffer|object} Key in PEM format, or data for generate key {b: bits, e: exponent}\r\n     * @constructor\r\n     */\r\n    function NodeRSA(key, format, options) {\r\n        if (!(this instanceof NodeRSA)) {\r\n            return new NodeRSA(key, format, options);\r\n        }\r\n\r\n        if (_.isObject(format)) {\r\n            options = format;\r\n            format = undefined;\r\n        }\r\n\r\n        this.$options = {\r\n            signingScheme: DEFAULT_SIGNING_SCHEME,\r\n            signingSchemeOptions: {\r\n                hash: 'sha256',\r\n                saltLength: null\r\n            },\r\n            encryptionScheme: DEFAULT_ENCRYPTION_SCHEME,\r\n            encryptionSchemeOptions: {\r\n                hash: 'sha1',\r\n                label: null\r\n            },\r\n            environment: utils.detectEnvironment(),\r\n            rsaUtils: this\r\n        };\r\n        this.keyPair = new rsa.Key();\r\n        this.$cache = {};\r\n\r\n        if (Buffer.isBuffer(key) || _.isString(key)) {\r\n            this.importKey(key, format);\r\n        } else if (_.isObject(key)) {\r\n            this.generateKeyPair(key.b, key.e);\r\n        }\r\n\r\n        this.setOptions(options);\r\n    }\r\n\r\n    /**\r\n     * Set and validate options for key instance\r\n     * @param options\r\n     */\r\n    NodeRSA.prototype.setOptions = function (options) {\r\n        options = options || {};\r\n        if (options.environment) {\r\n            this.$options.environment = options.environment;\r\n        }\r\n\r\n        if (options.signingScheme) {\r\n            if (_.isString(options.signingScheme)) {\r\n                var signingScheme = options.signingScheme.toLowerCase().split('-');\r\n                if (signingScheme.length == 1) {\r\n                    if (SUPPORTED_HASH_ALGORITHMS.node.indexOf(signingScheme[0]) > -1) {\r\n                        this.$options.signingSchemeOptions = {\r\n                            hash: signingScheme[0]\r\n                        };\r\n                        this.$options.signingScheme = DEFAULT_SIGNING_SCHEME;\r\n                    } else {\r\n                        this.$options.signingScheme = signingScheme[0];\r\n                        this.$options.signingSchemeOptions = {\r\n                            hash: null\r\n                        };\r\n                    }\r\n                } else {\r\n                    this.$options.signingSchemeOptions = {\r\n                        hash: signingScheme[1]\r\n                    };\r\n                    this.$options.signingScheme = signingScheme[0];\r\n                }\r\n            } else if (_.isObject(options.signingScheme)) {\r\n                this.$options.signingScheme = options.signingScheme.scheme || DEFAULT_SIGNING_SCHEME;\r\n                this.$options.signingSchemeOptions = _.omit(options.signingScheme, 'scheme');\r\n            }\r\n\r\n            if (!schemes.isSignature(this.$options.signingScheme)) {\r\n                throw Error('Unsupported signing scheme');\r\n            }\r\n\r\n            if (this.$options.signingSchemeOptions.hash &&\r\n                SUPPORTED_HASH_ALGORITHMS[this.$options.environment].indexOf(this.$options.signingSchemeOptions.hash) === -1) {\r\n                throw Error('Unsupported hashing algorithm for ' + this.$options.environment + ' environment');\r\n            }\r\n        }\r\n\r\n        if (options.encryptionScheme) {\r\n            if (_.isString(options.encryptionScheme)) {\r\n                this.$options.encryptionScheme = options.encryptionScheme.toLowerCase();\r\n                this.$options.encryptionSchemeOptions = {};\r\n            } else if (_.isObject(options.encryptionScheme)) {\r\n                this.$options.encryptionScheme = options.encryptionScheme.scheme || DEFAULT_ENCRYPTION_SCHEME;\r\n                this.$options.encryptionSchemeOptions = _.omit(options.encryptionScheme, 'scheme');\r\n            }\r\n\r\n            if (!schemes.isEncryption(this.$options.encryptionScheme)) {\r\n                throw Error('Unsupported encryption scheme');\r\n            }\r\n\r\n            if (this.$options.encryptionSchemeOptions.hash &&\r\n                SUPPORTED_HASH_ALGORITHMS[this.$options.environment].indexOf(this.$options.encryptionSchemeOptions.hash) === -1) {\r\n                throw Error('Unsupported hashing algorithm for ' + this.$options.environment + ' environment');\r\n            }\r\n        }\r\n\r\n        this.keyPair.setOptions(this.$options);\r\n    };\r\n\r\n    /**\r\n     * Generate private/public keys pair\r\n     *\r\n     * @param bits {int} length key in bits. Default 2048.\r\n     * @param exp {int} public exponent. Default 65537.\r\n     * @returns {NodeRSA}\r\n     */\r\n    NodeRSA.prototype.generateKeyPair = function (bits, exp) {\r\n        bits = bits || 2048;\r\n        exp = exp || 65537;\r\n\r\n        if (bits % 8 !== 0) {\r\n            throw Error('Key size must be a multiple of 8.');\r\n        }\r\n\r\n        this.keyPair.generate(bits, exp.toString(16));\r\n        this.$cache = {};\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Importing key\r\n     * @param keyData {string|buffer|Object}\r\n     * @param format {string}\r\n     */\r\n    NodeRSA.prototype.importKey = function (keyData, format) {\r\n        if (!keyData) {\r\n            throw Error(\"Empty key given\");\r\n        }\r\n\r\n        if (format) {\r\n            format = EXPORT_FORMAT_ALIASES[format] || format;\r\n        }\r\n\r\n        if (!formats.detectAndImport(this.keyPair, keyData, format) && format === undefined) {\r\n            throw Error(\"Key format must be specified\");\r\n        }\r\n        \r\n        this.$cache = {};\r\n        \r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Exporting key\r\n     * @param [format] {string}\r\n     */\r\n    NodeRSA.prototype.exportKey = function (format) {\r\n        format = format || DEFAULT_EXPORT_FORMAT;\r\n        format = EXPORT_FORMAT_ALIASES[format] || format;\r\n\r\n        if (!this.$cache[format]) {\r\n            this.$cache[format] = formats.detectAndExport(this.keyPair, format);\r\n        }\r\n\r\n        return this.$cache[format];\r\n    };\r\n\r\n    /**\r\n     * Check if key pair contains private key\r\n     */\r\n    NodeRSA.prototype.isPrivate = function () {\r\n        return this.keyPair.isPrivate();\r\n    };\r\n\r\n    /**\r\n     * Check if key pair contains public key\r\n     * @param [strict] {boolean} - public key only, return false if have private exponent\r\n     */\r\n    NodeRSA.prototype.isPublic = function (strict) {\r\n        return this.keyPair.isPublic(strict);\r\n    };\r\n\r\n    /**\r\n     * Check if key pair doesn't contains any data\r\n     */\r\n    NodeRSA.prototype.isEmpty = function (strict) {\r\n        return !(this.keyPair.n || this.keyPair.e || this.keyPair.d);\r\n    };\r\n\r\n    /**\r\n     * Encrypting data method with public key\r\n     *\r\n     * @param buffer {string|number|object|array|Buffer} - data for encrypting. Object and array will convert to JSON string.\r\n     * @param encoding {string} - optional. Encoding for output result, may be 'buffer', 'binary', 'hex' or 'base64'. Default 'buffer'.\r\n     * @param source_encoding {string} - optional. Encoding for given string. Default utf8.\r\n     * @returns {string|Buffer}\r\n     */\r\n    NodeRSA.prototype.encrypt = function (buffer, encoding, source_encoding) {\r\n        return this.$$encryptKey(false, buffer, encoding, source_encoding);\r\n    };\r\n\r\n    /**\r\n     * Decrypting data method with private key\r\n     *\r\n     * @param buffer {Buffer} - buffer for decrypting\r\n     * @param encoding - encoding for result string, can also take 'json' or 'buffer' for the automatic conversion of this type\r\n     * @returns {Buffer|object|string}\r\n     */\r\n    NodeRSA.prototype.decrypt = function (buffer, encoding) {\r\n        return this.$$decryptKey(false, buffer, encoding);\r\n    };\r\n\r\n    /**\r\n     * Encrypting data method with private key\r\n     *\r\n     * Parameters same as `encrypt` method\r\n     */\r\n    NodeRSA.prototype.encryptPrivate = function (buffer, encoding, source_encoding) {\r\n        return this.$$encryptKey(true, buffer, encoding, source_encoding);\r\n    };\r\n\r\n    /**\r\n     * Decrypting data method with public key\r\n     *\r\n     * Parameters same as `decrypt` method\r\n     */\r\n    NodeRSA.prototype.decryptPublic = function (buffer, encoding) {\r\n        return this.$$decryptKey(true, buffer, encoding);\r\n    };\r\n\r\n    /**\r\n     * Encrypting data method with custom key\r\n     */\r\n    NodeRSA.prototype.$$encryptKey = function (usePrivate, buffer, encoding, source_encoding) {\r\n        try {\r\n            var res = this.keyPair.encrypt(this.$getDataForEncrypt(buffer, source_encoding), usePrivate);\r\n\r\n            if (encoding == 'buffer' || !encoding) {\r\n                return res;\r\n            } else {\r\n                return res.toString(encoding);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            throw Error('Error during encryption. Original error: ' + e);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Decrypting data method with custom key\r\n     */\r\n    NodeRSA.prototype.$$decryptKey = function (usePublic, buffer, encoding) {\r\n        try {\r\n            buffer = _.isString(buffer) ? Buffer.from(buffer, 'base64') : buffer;\r\n            var res = this.keyPair.decrypt(buffer, usePublic);\r\n\r\n            if (res === null) {\r\n                throw Error('Key decrypt method returns null.');\r\n            }\r\n\r\n            return this.$getDecryptedData(res, encoding);\r\n        } catch (e) {\r\n            throw Error('Error during decryption (probably incorrect key). Original error: ' + e);\r\n        }\r\n    };\r\n\r\n    /**\r\n     *  Signing data\r\n     *\r\n     * @param buffer {string|number|object|array|Buffer} - data for signing. Object and array will convert to JSON string.\r\n     * @param encoding {string} - optional. Encoding for output result, may be 'buffer', 'binary', 'hex' or 'base64'. Default 'buffer'.\r\n     * @param source_encoding {string} - optional. Encoding for given string. Default utf8.\r\n     * @returns {string|Buffer}\r\n     */\r\n    NodeRSA.prototype.sign = function (buffer, encoding, source_encoding) {\r\n        if (!this.isPrivate()) {\r\n            throw Error(\"This is not private key\");\r\n        }\r\n\r\n        var res = this.keyPair.sign(this.$getDataForEncrypt(buffer, source_encoding));\r\n\r\n        if (encoding && encoding != 'buffer') {\r\n            res = res.toString(encoding);\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     *  Verifying signed data\r\n     *\r\n     * @param buffer - signed data\r\n     * @param signature\r\n     * @param source_encoding {string} - optional. Encoding for given string. Default utf8.\r\n     * @param signature_encoding - optional. Encoding of given signature. May be 'buffer', 'binary', 'hex' or 'base64'. Default 'buffer'.\r\n     * @returns {*}\r\n     */\r\n    NodeRSA.prototype.verify = function (buffer, signature, source_encoding, signature_encoding) {\r\n        if (!this.isPublic()) {\r\n            throw Error(\"This is not public key\");\r\n        }\r\n        signature_encoding = (!signature_encoding || signature_encoding == 'buffer' ? null : signature_encoding);\r\n        return this.keyPair.verify(this.$getDataForEncrypt(buffer, source_encoding), signature, signature_encoding);\r\n    };\r\n\r\n    /**\r\n     * Returns key size in bits\r\n     * @returns {int}\r\n     */\r\n    NodeRSA.prototype.getKeySize = function () {\r\n        return this.keyPair.keySize;\r\n    };\r\n\r\n    /**\r\n     * Returns max message length in bytes (for 1 chunk) depending on current encryption scheme\r\n     * @returns {int}\r\n     */\r\n    NodeRSA.prototype.getMaxMessageSize = function () {\r\n        return this.keyPair.maxMessageLength;\r\n    };\r\n\r\n    /**\r\n     * Preparing given data for encrypting/signing. Just make new/return Buffer object.\r\n     *\r\n     * @param buffer {string|number|object|array|Buffer} - data for encrypting. Object and array will convert to JSON string.\r\n     * @param encoding {string} - optional. Encoding for given string. Default utf8.\r\n     * @returns {Buffer}\r\n     */\r\n    NodeRSA.prototype.$getDataForEncrypt = function (buffer, encoding) {\r\n        if (_.isString(buffer) || _.isNumber(buffer)) {\r\n            return Buffer.from('' + buffer, encoding || 'utf8');\r\n        } else if (Buffer.isBuffer(buffer)) {\r\n            return buffer;\r\n        } else if (_.isObject(buffer)) {\r\n            return Buffer.from(JSON.stringify(buffer));\r\n        } else {\r\n            throw Error(\"Unexpected data type\");\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param buffer {Buffer} - decrypted data.\r\n     * @param encoding - optional. Encoding for result output. May be 'buffer', 'json' or any of Node.js Buffer supported encoding.\r\n     * @returns {*}\r\n     */\r\n    NodeRSA.prototype.$getDecryptedData = function (buffer, encoding) {\r\n        encoding = encoding || 'buffer';\r\n\r\n        if (encoding == 'buffer') {\r\n            return buffer;\r\n        } else if (encoding == 'json') {\r\n            return JSON.parse(buffer.toString());\r\n        } else {\r\n            return buffer.toString(encoding);\r\n        }\r\n    };\r\n\r\n    return NodeRSA;\r\n})();\r\n"],"names":["core","module","version","__e","$JSON","JSON","stringify","it","apply","arguments","global","self","window","lookup","revLookup","Arr","Uint8Array","Array","inited","init","code","i","len","length","charCodeAt","encodeChunk","uint8","start","end","tmp","num","output","push","join","fromByteArray","extraBytes","parts","len2","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","toString","isArray","arr","call","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","this","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","internalIsBuffer","checked","copy","val","type","data","fromObject","assertSize","size","b","_isBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64.fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","poolSize","_augment","alloc","fill","allocUnsafeSlow","isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754.write","writeDouble","newBuf","subarray","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","ieee754.read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","b64","l","placeHolders","L","base64.toByteArray","trim","replace","stringtrim","base64clean","src","dst","isFastBuffer","isSlowBuffer","constructor","constants","require","rsa","_","Ber","utils","schemes","formats","RSA_NO_PADDING","NodeRSA","key","format","options","isObject","$options","signingScheme","DEFAULT_SIGNING_SCHEME","signingSchemeOptions","hash","saltLength","encryptionScheme","DEFAULT_ENCRYPTION_SCHEME","encryptionSchemeOptions","label","environment","detectEnvironment","rsaUtils","keyPair","Key","$cache","Buffer.isBuffer","isString","importKey","generateKeyPair","setOptions","SUPPORTED_HASH_ALGORITHMS","node10","node","iojs","browser","EXPORT_FORMAT_ALIASES","private","private-der","public","public-der","split","scheme","omit","isSignature","isEncryption","bits","exp","generate","keyData","detectAndImport","exportKey","detectAndExport","isPrivate","isPublic","strict","isEmpty","encrypt","source_encoding","$$encryptKey","decrypt","$$decryptKey","encryptPrivate","decryptPublic","usePrivate","$getDataForEncrypt","console","usePublic","$getDecryptedData","sign","verify","signature","signature_encoding","getKeySize","keySize","getMaxMessageSize","maxMessageLength","isNumber","_JSON$stringify","parse"],"mappings":"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"}