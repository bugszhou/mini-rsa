!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self,function(){var i=e["mini-rsa"],r=e["mini-rsa"]=t();r.noConflict=function(){return e["mini-rsa"]=i,r}}())}(this,function(){"use strict";var e=function(e,t){return e(t={exports:{}},t.exports),t.exports}(function(e){var t=e.exports={version:"2.6.9"};"number"==typeof __e&&(__e=t)}),t=(e.version,e.JSON||(e.JSON={stringify:JSON.stringify})),i=function(e){return t.stringify.apply(t,arguments)},r=require("constants"),n=require("./libs/rsa.js"),o=(require("crypto"),require("asn1").Ber,require("./utils")._),s=require("./utils"),h=require("./schemes/schemes.js"),p=require("./formats/formats.js");return void 0===r.RSA_NO_PADDING&&(r.RSA_NO_PADDING=3),function(){function e(t,i,h){return this instanceof e?(o.isObject(i)&&(h=i,i=void 0),this.$options={signingScheme:c,signingSchemeOptions:{hash:"sha256",saltLength:null},encryptionScheme:r,encryptionSchemeOptions:{hash:"sha1",label:null},environment:s.detectEnvironment(),rsaUtils:this},this.keyPair=new n.Key,this.$cache={},Buffer.isBuffer(t)||o.isString(t)?this.importKey(t,i):o.isObject(t)&&this.generateKeyPair(t.b,t.e),void this.setOptions(h)):new e(t,i,h)}var t={node10:["md4","md5","ripemd160","sha1","sha224","sha256","sha384","sha512"],node:["md4","md5","ripemd160","sha1","sha224","sha256","sha384","sha512"],iojs:["md4","md5","ripemd160","sha1","sha224","sha256","sha384","sha512"],browser:["md5","ripemd160","sha1","sha256","sha512"]},r="pkcs1_oaep",c="pkcs1",a={private:"pkcs1-private-pem","private-der":"pkcs1-private-der",public:"pkcs8-public-pem","public-der":"pkcs8-public-der"};return e.prototype.setOptions=function(e){if((e=e||{}).environment&&(this.$options.environment=e.environment),e.signingScheme){if(o.isString(e.signingScheme)){var i=e.signingScheme.toLowerCase().split("-");1==i.length?-1<t.node.indexOf(i[0])?(this.$options.signingSchemeOptions={hash:i[0]},this.$options.signingScheme=c):(this.$options.signingScheme=i[0],this.$options.signingSchemeOptions={hash:null}):(this.$options.signingSchemeOptions={hash:i[1]},this.$options.signingScheme=i[0])}else o.isObject(e.signingScheme)&&(this.$options.signingScheme=e.signingScheme.scheme||c,this.$options.signingSchemeOptions=o.omit(e.signingScheme,"scheme"));if(!h.isSignature(this.$options.signingScheme))throw Error("Unsupported signing scheme");if(this.$options.signingSchemeOptions.hash&&-1===t[this.$options.environment].indexOf(this.$options.signingSchemeOptions.hash))throw Error("Unsupported hashing algorithm for "+this.$options.environment+" environment")}if(e.encryptionScheme){if(o.isString(e.encryptionScheme)?(this.$options.encryptionScheme=e.encryptionScheme.toLowerCase(),this.$options.encryptionSchemeOptions={}):o.isObject(e.encryptionScheme)&&(this.$options.encryptionScheme=e.encryptionScheme.scheme||r,this.$options.encryptionSchemeOptions=o.omit(e.encryptionScheme,"scheme")),!h.isEncryption(this.$options.encryptionScheme))throw Error("Unsupported encryption scheme");if(this.$options.encryptionSchemeOptions.hash&&-1===t[this.$options.environment].indexOf(this.$options.encryptionSchemeOptions.hash))throw Error("Unsupported hashing algorithm for "+this.$options.environment+" environment")}this.keyPair.setOptions(this.$options)},e.prototype.generateKeyPair=function(e,t){if(t=t||65537,0!=(e=e||2048)%8)throw Error("Key size must be a multiple of 8.");return this.keyPair.generate(e,t.toString(16)),this.$cache={},this},e.prototype.importKey=function(e,t){if(!e)throw Error("Empty key given");if(t&&(t=a[t]||t),!p.detectAndImport(this.keyPair,e,t)&&void 0===t)throw Error("Key format must be specified");return this.$cache={},this},e.prototype.exportKey=function(e){return e=a[e=e||"private"]||e,this.$cache[e]||(this.$cache[e]=p.detectAndExport(this.keyPair,e)),this.$cache[e]},e.prototype.isPrivate=function(){return this.keyPair.isPrivate()},e.prototype.isPublic=function(e){return this.keyPair.isPublic(e)},e.prototype.isEmpty=function(){return!(this.keyPair.n||this.keyPair.e||this.keyPair.d)},e.prototype.encrypt=function(e,t,i){return this.$$encryptKey(!1,e,t,i)},e.prototype.decrypt=function(e,t){return this.$$decryptKey(!1,e,t)},e.prototype.encryptPrivate=function(e,t,i){return this.$$encryptKey(!0,e,t,i)},e.prototype.decryptPublic=function(e,t){return this.$$decryptKey(!0,e,t)},e.prototype.$$encryptKey=function(e,t,i,r){try{var n=this.keyPair.encrypt(this.$getDataForEncrypt(t,r),e);return"buffer"!=i&&i?n.toString(i):n}catch(e){throw console.log(e),Error("Error during encryption. Original error: "+e)}},e.prototype.$$decryptKey=function(e,t,i){try{t=o.isString(t)?Buffer.from(t,"base64"):t;var r=this.keyPair.decrypt(t,e);if(null===r)throw Error("Key decrypt method returns null.");return this.$getDecryptedData(r,i)}catch(e){throw Error("Error during decryption (probably incorrect key). Original error: "+e)}},e.prototype.sign=function(e,t,i){if(!this.isPrivate())throw Error("This is not private key");var r=this.keyPair.sign(this.$getDataForEncrypt(e,i));return t&&"buffer"!=t&&(r=r.toString(t)),r},e.prototype.verify=function(e,t,i,r){if(!this.isPublic())throw Error("This is not public key");return r=r&&"buffer"!=r?r:null,this.keyPair.verify(this.$getDataForEncrypt(e,i),t,r)},e.prototype.getKeySize=function(){return this.keyPair.keySize},e.prototype.getMaxMessageSize=function(){return this.keyPair.maxMessageLength},e.prototype.$getDataForEncrypt=function(e,t){if(o.isString(e)||o.isNumber(e))return Buffer.from(""+e,t||"utf8");if(Buffer.isBuffer(e))return e;if(o.isObject(e))return Buffer.from(i(e));throw Error("Unexpected data type")},e.prototype.$getDecryptedData=function(e,t){return"buffer"==(t=t||"buffer")?e:"json"==t?JSON.parse(e.toString()):e.toString(t)},e}()});
//# sourceMappingURL=mini-rsa.min.js.map
